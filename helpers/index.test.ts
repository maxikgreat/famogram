import faker from 'faker';import {isEmail, isCategory, isNumber, renameKeys} from './';import {categories} from '../types';describe('Helper functions', () => {  describe('isCategory function', () => {    it('should return true if value is category', () => {      const value = categories[faker.random.number(categories.length - 1)]      expect(isCategory(value)).toBe(true);    });        it('should return false if value is not category', () => {      const value = 'Non-category-value';      expect(isCategory(value)).toBe(false);    });      it('should return false if value falsy', () => {      expect(isCategory('')).toBe(false);    });  });    describe('isNumber function', () => {    it('should return true if value is number', () => {      const value = faker.random.number(1000).toString();      expect(isNumber(value)).toBe(true);    });      it('should return false if value not a number', () => {      const value = faker.random.word();      expect(isNumber(value)).toBe(false);            expect(isNumber('')).toBe(false);    });  });    describe('isEmail function', () => {    it('should validate email', () => {      const email = faker.internet.email();      expect(isEmail(email)).toBe(true);    });      it('should validate email and non-email values', () => {      let email = faker.internet.email();      expect(isEmail(email)).toBe(true);            email = 'notEmailValue';      expect(isEmail(email)).toBe(false);    });  });    describe('renameKeys function', () => {    it("should rename object's keys properly", () => {      const beforeObj = {        value: 'a',        'https://hativi.com/user_metadata': 'b',        donut: 'c'      };            const afterObj = {        value: 'a',        'user_metadata': 'b',        donut: 'c'      }            expect(renameKeys(beforeObj)).toEqual(afterObj);    });      it("should handle unexpected values ", () => {      expect(renameKeys({})).toEqual(null);      expect(renameKeys(null)).toEqual(null);    });  });});