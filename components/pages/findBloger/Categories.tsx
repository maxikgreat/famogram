import {Dispatch, SetStateAction, useState, VFC} from 'react';import Skeleton, {SkeletonTheme} from 'react-loading-skeleton';import {Input} from '@/components/common';import {faSearch} from '@fortawesome/free-solid-svg-icons';import {Category} from '@pagesComponents/findBloger/Category';import {categories, Category as CategoryType, User} from '@/types';interface CategoriesProps {	activeCategory: CategoryType[],	setActiveCategory: Dispatch<SetStateAction<CategoryType[]>>,	getBloggersState: {		data: User[] | null,		error: string,		loading: boolean,	}}export const Categories: VFC<CategoriesProps> = ({ activeCategory, setActiveCategory, getBloggersState }) => {	const [searchCategory, setSearchCategory] = useState<string>('');		const renderCategories = () => {		return categories			.filter((category) => category.toLowerCase().includes(searchCategory.toLowerCase()))			.map((filteredCategory, index) => (				<Category					key={index}					activeCategory={activeCategory}					setActiveCategory={setActiveCategory}					category={filteredCategory}				/>			));	};		const renderSkeletons = () => categories.map((cat) => (			<Skeleton				key={cat}				duration={Math.random() * (1.1 - 1) + 1}				width={Math.floor(Math.random() * (175 - 75 + 1) + 75)}				height={20}				className="mb-2 mr-2"			/>		)	);	return (		<div className="col-lg-4 d-none d-md-block">			<h3>Categories</h3>				<Input					name="category"					icon={faSearch}					placeholder="Find category"					onChange={({ target: { value }}) => setSearchCategory(value)}					value={searchCategory}				/>				{					getBloggersState.loading						? (							<SkeletonTheme color="#202020" highlightColor="#444">								{renderSkeletons()}							</SkeletonTheme>						) : (							<ul className="nav nav-tabs nav-tags-stack nav-tabs-line bg-transparent flex-row scroll-list">								<Category									activeCategory={activeCategory}									setActiveCategory={setActiveCategory}								/>								{renderCategories()}							</ul>						)				}			<hr className="d-block d-lg-none bg-primary my-4 my-lg-0" style={{ height: '5px'}} />		</div>	)}